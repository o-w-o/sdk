@startuml

header 烛火录
title Symbols 结构

package o.w.o.server.io.db {
    class EntityIdentity {
      String id
      Date cTime
      Date uTime
    }
    class EntityWithSpace<EntityType, EntitySpace> {
     + EntityType type
     ---
     + EntitySpace space
     + String spaceId
     + Json spaceContent
    }
    class EntitySpace<EntityType> {
     + EntityType type
    }

    EntityIdentity <|-- EntitySpace
    EntityIdentity <|-- EntityWithSpace
}

package o.w.o.resource.symbol {
  package domain {

    class EntityAType {
      + EntityAType from(EntityATypeEnum type)
    }

    enum EntityATypeEnum {
      Integer id;
      String typeName;
    }

    class EntityATypeName {
    }

    abstract class EntityASpace <<EntityAType>> {
     + EntityAType type
    }
    EntitySpace <|-- EntityASpace

    class EntityA<<EntityAType, EntityASpace>> {
     + EntityAType type
     + EntityASpace space
    }
    EntityWithSpace <|-- EntityA

    package ext.space {
     class ImplementedEntityASpace {
       EntityAType type = EntityAType.X
     }
    }

    EntityAType *-- EntityATypeEnum
    EntityAType *-- EntityATypeName

    EntityA *-- EntityAType : 具象化依据
    EntityA *--- EntityASpace : 抽象化载体

    EntityASpace <|- ImplementedEntityASpace : 具象化载体实例
  }

  package repository {
    interface EntityARepository {
      + save(EntityA entityA)
    }
    interface ImplementedEntityASpaceRepository {
      + save(ImplementedEntityASpace implementedEntityASpace)
    }
  }

  repository ..> domain

  package service {
    package handler {
      package ext.handler {
       class ImplementedEntityASpaceHandler {
         + save(EntityA entityA)
       }
      }
      abstract EntityASpaceHandler {
        + save(EntityA entityA)
      }
      annotation EntityATypeSelector {}
      class EntityASpaceHandlerHolder implements ApplicationContextAware {
        + Optional<EntityASpaceHandler> select(EntityAType entityAType)
      }
    }

    class EntityAService {
      + save(EntityA entityA)
    }

    EntityASpaceHandlerHolder <- EntityATypeSelector : 执行者收集
    note on link
    程序启动后:
    通过 <b>@EntityATypeSelector</b> 注解
    收集 对应类型的 EntityASpaceHandler 实现
    end note
    EntityASpaceHandlerHolder <-- EntityASpaceHandler : 执行者定义
    note on link
    执行时:
    通过 <b>select</b> 方法调用相应 Handler
    end note

    EntityASpaceHandler -|> ext.handler : 具体执行者

    ImplementedEntityASpaceHandler ..> repository
    EntityAService .> handler
  }
}

package o.w.o.api.symbol <<Cloud>> #Gold {
  class EntityAAPI{}
}

o.w.o.api.symbol ..> service : 调用服务层进行接口响应
@enduml